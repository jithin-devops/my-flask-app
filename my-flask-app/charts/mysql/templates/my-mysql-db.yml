apiVersion: v1
kind: Service
metadata:
  name: {{ template "mysql.name" . }}
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - port: {{ .Values.mysql.service.externalPort }}
      targetPort: {{ .Values.mysql.service.internalPort }}
      protocol: TCP
  selector:
    app: {{ template "mysql.name" . }}

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "mysql.name" . }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ template "mysql.name" . }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ template "mysql.name" . }}
    spec:
      containers:
        - name: {{ template "mysql.name" . }}
          image: "{{ .Values.mysql.image.repository }}:{{ .Values.mysql.image.tag }}"
          ports:
            - containerPort: {{ .Values.mysql.service.internalPort }}
          env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.name }}
                key: password
          volumeMounts:
          - name: mysql-initdb
            mountPath: /docker-entrypoint-initdb.d
          - name: mysql-persistent-storage
            mountPath: /var/lib/mysql/my_db
      volumes:
      - name: mysql-initdb
        configMap:
          name: {{ template "mysql.name" . }}-configuration
      - name: mysql-persistent-storage
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "mysql.name" .) }}
      {{- else }}
        emptyDir: {}
      {{- end -}}







